package thread.Test;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import thread.Test.Constraints;
import thread.Test.DataThread;
import thread.Test.VoiceThread;

public class ThreadTestActivity extends Activity {
    
	private String TAG = "MainThread";
    private Button btnEnd;
    private Button btnBeg;
    private TextView labelTimer;
    private Thread clockThread;
    private boolean isRunning = true;
    private Handler handler, sHandler ;
     
    
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        btnEnd = (Button) findViewById(R.id.button1);
        btnBeg = (Button) findViewById(R.id.button2);
        labelTimer = (TextView) findViewById(R.id.textView1);
        
        btnEnd.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                //isRunning = false;
            }
        });

        btnEnd.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
            	Message startMsg = new Message();
               //VoiceThread voice = new VoiceThread(handler);
               //voice.start();
            	ConServer conServer = new ConServer(handler, sHandler);
            	conServer.start();
            }
        });
        
        handler = new Handler() {

            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                case Constraints.dataMsg:
                	//ModelMsg mesg = VoiceThread.getMsg();
                	//Bundle mesg = new Bundle(); 
                    //data.putString("aa","ttt"); 
                	//data.putStringArray("msg", mesg.getMsgID());
                    //msg.setData(data); 
                	//msg.setData(mesg);
                	DataThread dataThread = new DataThread(handler);
                	dataThread.start();
                	Log.d("data ", " data Thread End ");
                	labelTimer.setText(Constraints.getTestString());
                	handler.obtainMessage(Constraints.dataMsg, " dataMsg").sendToTarget();
                    break;
                case 1:
                	//DataThread.dataThread(handler, msg.obj);
                	labelTimer.setText(Constraints.getTestString());
                }
            }
        };
    }
}