/******main interface*****/
package thread.pSrc;

import thread.Test.ModelMsg;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;

public class p_main extends Thread
{
	private String TAG = "server Thread";

	//private ModelData mdata = new ModelData();  //model Msg

    Handler handler;
    
    public p_main(Handler handler) {
        super();
        this.handler = handler;
    }

    @Override
    public void run() {
    	Looper.prepare();//1、初始化Looper

        try {  // 模拟执行某项任务，下载等
            Thread.sleep(5000);
            handler.obtainMessage();
            
            // 任务完成后通知activity更新UI
            Message msg = prepareMessage("task completed!");
            // message将被添加到主线程的MQ中
            handler.sendMessage(msg);
        } catch (InterruptedException e) {
            Log.d(TAG, "interrupted!");
        }
        Looper.loop();
    }

    private Message prepareMessage(String str) {
        Message result = handler.obtainMessage();
        ModelMsg mdata = new ModelMsg();
        Bundle data = new Bundle();
        mdata.setMsgID(1);
		mdata.setMsgStr(str );
        data.putParcelable("data", mdata);
        
        result.setData(data);
        return result;
    }
    
    private String doTask(URLMsg UMsg){
    	System.out.println(" data thread ");
    	
    	String StrXML = "Telli";
		String StrUML = "Telli";
		
		BlockURL TempURL = new BlockURL(UMsg);
		StrUML = TempURL.GetStrURL();
		
		CallServer TempXML = new CallServer(StrUML);
		StrXML = TempXML.GetStrXML();
		
		return StrXML;
    }
    

}
