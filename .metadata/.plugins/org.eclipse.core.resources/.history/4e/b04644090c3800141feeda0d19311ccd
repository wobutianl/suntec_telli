package thread.Data;  
  
import java.io.ByteArrayInputStream;  
import java.io.IOException;  
import java.io.InputStream;  
import java.io.UnsupportedEncodingException;  
import java.util.Iterator;  
  
import org.dom4j.Document;  
import org.dom4j.DocumentException;  
import org.dom4j.Element;  
import org.dom4j.io.SAXReader;  
  
public class Decode {  
 
    public void parseXml(String objXml) {  
        // 1����������ַ���  
        InputStream in = null;  
       try {  
            in = new ByteArrayInputStream(objXml.getBytes("UTF-8"));  
            SAXReader reader = new SAXReader();  
            // 2������ת��document����  
            Document document = reader.read(in);  
            Element rootElement = document.getRootElement(); // �õ���ڵ�  
            
            Element did = rootElement.element("did");  
            String Did = did.getTextTrim();
             
            Element sid = rootElement.element("sid");  
            String Sid = sid.getTextTrim();
            
            System.out.println("did--->" + Did); 
            System.out.println("sid--->" + Sid);  
            
            
                              
            ////////�������ظ���ѭ�� ///////////
            for (Iterator whereArray = rootElement.elementIterator(); whereArray  
            .hasNext();) {  
        Element type = (Element) whereArray.next();  
        String nodeName = type.getName();  
        if (!nodeName.equals("op")) { // ������ڵ㲻��op�����     
        	continue;   
        }         

        Element hins = type.element("hints"); 
        Element prompt = type.element("prompt");
        String Display = null;
        String Tts;
        String promptFlag;
        String Type;

        if (null != hins) {
            
        	Element content = hins.element("content");  
            if (null != content) {  
            	Display = content.getTextTrim();
                System.out.println("content-->" + Display); 
            }             
        } 
        
        else if (null != prompt) { 
           	  
            	  if(null != prompt.attributeValue("display")) {
            		  Display = prompt.attributeValue("tts"); 
                      System.out.println("display-->" + Display);   
             	  }
            	  
            	  if(null == prompt.attributeValue("tts")) {
            		 Tts = null;
              	  }
              	  else {      
              		Tts = prompt.attributeValue("tts");
                    System.out.println("tts-->" + Tts);  
                  }
            	  
            	  if(Display == null && Tts == null) {
            	  
            		  promptFlag = "0";
            	  }
            	  else if(Display != null && Tts == null) {
            	  
            		  promptFlag = "1";
            	  }
            	  else if(Display == null && Tts != null) {
                	  
            		  promptFlag = "2";
            	  }
            	  else  {
                	  
            		  promptFlag = "3";
            	  }
            	  System.out.println("promptFlag-->" + promptFlag);  
            		 
        }  
        
        else {
        	                  	
            	Type = type.attributeValue("type"); 
            	System.out.println("Type-->" + Type); 
        }       
        
    } 
           
        } catch (UnsupportedEncodingException e) {  
            System.out.println("������쳣");  
            e.printStackTrace();  
        } catch (DocumentException e) {  
            // TODO Auto-generated catch block  
            System.out.println("Document��������쳣");  
            e.printStackTrace();  
        } finally {  
            try {  
                in.close();  
            } catch (IOException e) {  
                // TODO Auto-generated catch block  
                System.out.println("��ر��쳣");  
                e.printStackTrace();  
           }  
        }  
  
    }  
}  
